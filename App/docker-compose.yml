services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.php
    container_name: miscvord_php
    restart: unless-stopped
    # For production, consider building code into the image and removing these code volumes
    # Or, if you deploy by syncing code to the VPS and then running docker-compose, these are fine.
    volumes:
      - ./public:/var/www/html/public:ro
      - ./views:/var/www/html/views:ro
      - ./controllers:/var/www/html/controllers:ro
      - ./config:/var/www/html/config:ro
      - ./bootstrap:/var/www/html/bootstrap:ro
      - ./migrations:/var/www/html/migrations:ro
      - ./database:/var/www/html/database:ro
      - ./utils:/var/www/html/utils:ro
      - ./storage:/var/www/html/storage:rw # Ensure this is writable for uploads/logs
      - ./router.php:/var/www/html/router.php:ro
      - ./index.php:/var/www/html/index.php:ro
      - ./.htaccess:/var/www/html/.htaccess:ro
    depends_on:
      - socket-server
      - db
    networks:
      - miscvord_network
    ports: # Ports exposed to the host
      - "${APP_PORT:-1001}:1001"
    environment:
      - APP_ENV=${APP_ENV:-production} # Set to production for VPS
      - APP_DEBUG=${APP_DEBUG:-false}  # Set to false for VPS
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-1003}
      - DB_NAME=${DB_NAME:-misvord}
      - DB_USER=${DB_USER:-root}
      - DB_PASS=${DB_PASS:-password} # Use .env file for this!
      - DB_CHARSET=${DB_CHARSET:-utf8mb4}
      # Unified Socket Configuration
      # SOCKET_BASE_PATH should have leading slash
      - SOCKET_BASE_PATH=${SOCKET_BASE_PATH:-/socket.io}
      # SOCKET_SUBPATH should not have leading or trailing slashes
      - SOCKET_SUBPATH=${SOCKET_SUBPATH:-misvord/socket}
      - SOCKET_API_KEY=${SOCKET_API_KEY:-kolin123} # Use .env file for this!
      # Environment Detection
      - IS_VPS=${IS_VPS:-true} # Set to true for VPS
      - USE_HTTPS=${USE_HTTPS:-true} # Set to true for VPS
      - DOMAIN=${DOMAIN:-marvelcollin.my.id} # Set to your domain
      - PORT=1001 # Internal port for PHP service
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Unified Socket.io Server
  socket-server:
    build:
      context: .
      dockerfile: Dockerfile.node
    container_name: miscvord_socket
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - miscvord_network
    ports: # Ports exposed to the host
      - "${SOCKET_PORT:-1002}:1002"
    #  - "${SOCKET_SECURE_PORT:-1443}:1443" # Not needed if Nginx on host handles SSL
    environment:
      - NODE_ENV=${APP_ENV:-production} # Set to production for VPS
      - PORT=${SOCKET_PORT:-1002} # Internal port for Node service
      # - SECURE_PORT=${SOCKET_SECURE_PORT:-1443} # Not needed if Nginx handles SSL
      # Unified Socket Configuration
      # SOCKET_BASE_PATH should have leading slash
      - SOCKET_BASE_PATH=${SOCKET_BASE_PATH:-/socket.io}
      # SOCKET_SUBPATH should not have leading or trailing slashes
      - SOCKET_SUBPATH=${SOCKET_SUBPATH:-misvord/socket}
      - SOCKET_API_KEY=${SOCKET_API_KEY:-kolin123} # Use .env file for this!
      # Database Configuration
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-1003}
      - DB_NAME=${DB_NAME:-misvord}
      - DB_USER=${DB_USER:-root}
      - DB_PASS=${DB_PASS:-password} # Use .env file for this!
      # Environment Detection
      - IS_VPS=${IS_VPS:-true} # Always true to ensure consistent socket path
      - USE_HTTPS=${USE_HTTPS:-true} # Nginx handles actual SSL, but app might need to know
      - DOMAIN=${DOMAIN:-marvelcollin.my.id} # Set to your domain
      # Additional Configuration
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://marvelcollin.my.id} # Specific for your domain
      - DISABLE_DOTENV=true # Prevent .env file from overriding these settings
      - DEBUG=${DEBUG:-false} # Debug mode off by default
      - VIDEO_CHAT_ROOM=global-video-chat # Default room name
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 1024
        hard: 2048
    healthcheck:
      # Using curl for healthcheck, simpler and often more available
      test: ["CMD-SHELL", "curl -f http://localhost:1002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: miscvord_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-misvord}
      MYSQL_ROOT_PASSWORD: ${DB_PASS:-password} # Use .env file for this!
      MYSQL_ROOT_HOST: "%"
      MYSQL_TCP_PORT: ${DB_PORT:-1003}
    volumes:
      - miscvord_db_data:/var/lib/mysql # Persists DB data on the host
    networks:
      - miscvord_network
    # ports: # Usually kept internal unless direct host access is needed
    #   - "${DB_PORT:-1003}:${DB_PORT:-1003}"
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --port=${DB_PORT:-1003}
    security_opt:
      - seccomp:unconfined # Required by MySQL for some operations
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-P", "${DB_PORT:-1003}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Enhanced PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: miscvord_phpmyadmin
    depends_on:
      - db
    networks:
      - miscvord_network
    ports: # Ports exposed to the host
     - "${PMA_PORT:-1004}:80"
    environment:
      - PMA_HOST=db
      - PMA_PORT=${DB_PORT:-1003}
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=500M
      - PMA_USER=${DB_USER:-root}
      - PMA_PASSWORD=${DB_PASS:-password} # Use .env file for this!
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  adminer:
    image: adminer
    container_name: miscvord_adminer
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - miscvord_network
    ports: # Ports exposed to the host
     - "${ADMINER_PORT:-1005}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha # Example theme
    security_opt:
      - no-new-privileges:true

networks:
  miscvord_network:
    driver: bridge

volumes:
  miscvord_db_data: # Defines the volume for MySQL data persistence
    driver: local # Explicitly define as local driver
