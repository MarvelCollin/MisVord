server {
    listen 80;
    server_name marvelcollin.my.id;

    # Redirect everything on HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name marvelcollin.my.id www.marvelcollin.my.id;

    # SSL certificate configuration
    ssl_certificate /etc/letsencrypt/live/marvelcollin.my.id/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/marvelcollin.my.id/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;

    # SSL optimization
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Main application under /misvord
    location /misvord/ {
        proxy_pass http://localhost:1001/; # Changed from misvord_php:1001
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    }

    # Static assets with caching
    location ~* ^/misvord/(css|js|assets)/(.*) {
        proxy_pass http://localhost:1001/$1/$2; # Changed from misvord_php:1001
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_valid 200 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Unified Socket server configuration - handles all WebSocket paths
    # This matches the SOCKET_SUBPATH environment variable (misvord/socket)
    location /misvord/socket/ {
        proxy_pass http://localhost:1002/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_cache_bypass $http_upgrade;
        
        # Enhanced WebSocket specific settings
        proxy_read_timeout 3600s;           # 1 hour timeout - prevents WebSocket disconnections
        proxy_send_timeout 3600s;           # 1 hour send timeout 
        proxy_connect_timeout 30s;          # 30 second connect timeout
        proxy_buffering off;                # Disable buffering for WebSockets
        proxy_buffer_size 4k;               # Small buffer size since websocket msgs are usually small
        
        # Keep alive settings
        keepalive_timeout 650s;             # Keep connections alive
        keepalive_requests 10000;           # Allow many requests per connection
        
        # Enable TCP keepalive on proxy connections
        proxy_socket_keepalive on;
        
        # CORS headers for WebSocket
        # In production - limit to your domain
        set $cors_origin "https://marvelcollin.my.id";
        
        # For development - allow localhost with different ports (both http and https)
        if ($http_origin ~* "^https?://localhost:[0-9]+$") {
            set $cors_origin $http_origin;
        }
        
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Socket.IO specific path - ensures Socket.IO client can connect properly
    location /misvord/socket/socket.io/ {
        proxy_pass http://localhost:1002/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_cache_bypass $http_upgrade;
        
        # Enhanced WebSocket specific settings - standardized with the other location
        proxy_read_timeout 3600s;           # 1 hour timeout - prevents WebSocket disconnections
        proxy_send_timeout 3600s;           # 1 hour send timeout 
        proxy_connect_timeout 30s;          # 30 second connect timeout
        proxy_buffering off;                # Disable buffering for WebSockets
        proxy_buffer_size 4k;               # Small buffer size since websocket msgs are usually small
        
        # Keep alive settings
        keepalive_timeout 650s;             # Keep connections alive
        keepalive_requests 10000;           # Allow many requests per connection
        
        # Enable TCP keepalive on proxy connections
        proxy_socket_keepalive on;
        
        # CORS headers for WebSocket - use the same dynamic approach for consistency
        set $cors_origin "https://marvelcollin.my.id";
        
        # For development - allow localhost with different ports (both http and https)
        if ($http_origin ~* "^https?://localhost:[0-9]+$") {
            set $cors_origin $http_origin;
        }
        
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # PHPMyAdmin under /misvord/pma
    location /misvord/pma/ {
        proxy_pass http://localhost:1004/; # Changed from misvord_phpmyadmin:1004
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Adminer under /misvord/adminer
    location /misvord/adminer/ {
        proxy_pass http://localhost:1005/; # Changed from misvord_adminer:1005
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Redirect root to /misvord
    location = / {
        return 301 /misvord/;
    }

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_vary on;
} 