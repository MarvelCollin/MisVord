.nitro-section {
    position: relative;
    background: linear-gradient(135deg, #2d1b69 0%, #11074a 25%, #6a0572 75%, #a663cc 100%);
    min-height: 100vh;
    padding: 2rem;
    box-sizing: border-box;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}

.nitro-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    pointer-events: none;
}

.premium-sparkles {
    position: absolute;
    width: 100%;
    height: 100%;
}

.sparkle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: #fff;
    border-radius: 50%;
    animation: sparkleFloat 4s ease-in-out infinite;
}

.sparkle-1 {
    box-shadow: 0 0 6px #ffd700, 0 0 12px #ffd700;
    animation-duration: 4s;
}

.sparkle-2 {
    box-shadow: 0 0 6px #ff69b4, 0 0 12px #ff69b4;
    animation-duration: 6s;
}

.sparkle-3 {
    box-shadow: 0 0 6px #9370db, 0 0 12px #9370db;
    animation-duration: 5s;
}

.sparkle-4 {
    box-shadow: 0 0 6px #00ffff, 0 0 12px #00ffff;
    animation-duration: 7s;
}

@keyframes sparkleFloat {
    0%, 100% {
        transform: translateY(0) scale(1);
        opacity: 0.8;
    }
    25% {
        transform: translateY(-20px) scale(1.2);
        opacity: 1;
    }
    50% {
        transform: translateY(-10px) scale(0.8);
        opacity: 0.6;
    }
    75% {
        transform: translateY(-25px) scale(1.1);
        opacity: 1;
    }
}

.premium-glow {
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    opacity: 0.3;
    animation: premiumFloat 20s ease-in-out infinite alternate;
}

.glow-1 {
    width: 400px;
    height: 400px;
    background: radial-gradient(circle, rgba(255, 215, 0, 0.8), transparent);
    top: 5%;
    left: 5%;
    animation-delay: 0s;
}

.glow-2 {
    width: 350px;
    height: 350px;
    background: radial-gradient(circle, rgba(255, 105, 180, 0.6), transparent);
    bottom: 5%;
    right: 5%;
    animation-delay: 7s;
}

.glow-3 {
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, rgba(147, 112, 219, 0.5), transparent);
    top: 40%;
    left: 50%;
    animation-delay: 14s;
}

.glow-4 {
    width: 250px;
    height: 250px;
    background: radial-gradient(circle, rgba(0, 255, 255, 0.4), transparent);
    top: 20%;
    right: 20%;
    animation-delay: 21s;
}

@keyframes premiumFloat {
    0% {
        transform: translate(0, 0) scale(1) rotate(0deg);
    }
    100% {
        transform: translate(30px, -20px) scale(1.1) rotate(180deg);
    }
}

.crown-icon {
    background: linear-gradient(135deg, #ffd700, #ffed4a);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    filter: drop-shadow(0 4px 8px rgba(255, 215, 0, 0.3));
    animation: crownPulse 2s ease-in-out infinite;
}

@keyframes crownPulse {
    0%, 100% {
        transform: scale(1) rotate(0deg);
    }
    50% {
        transform: scale(1.1) rotate(5deg);
    }
}

.gradient-text {
    background: linear-gradient(135deg, #ffd700, #ff69b4, #9370db, #00ffff);
    background-size: 300% 300%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 3s ease-in-out infinite;
}

@keyframes gradientShift {
    0%, 100% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
}

.nitro-title, .nitro-subtitle {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
}

.nitro-section.is-active .nitro-title.revealed,
.nitro-section.is-active .nitro-subtitle.revealed {
    opacity: 1;
    transform: translateY(0);
}

.nitro-timeline {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
    padding: 2rem 0;
}

.timeline-track {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 2rem;
}

.timeline-line {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg, #ffd700, #ff69b4, #9370db);
    transform: translateY(-50%);
    z-index: 1;
    opacity: 0.3;
}

.timeline-line::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, #ffd700, #ff69b4, #9370db);
    filter: blur(4px);
    animation: lineGlow 2s linear infinite;
}

.timeline-feature {
    position: relative;
    z-index: 2;
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
    width: calc(100% / 6 - 2rem);
    display: flex;
    flex-direction: column;
    align-items: center;
}

.timeline-feature.visible {
    opacity: 1;
    transform: translateY(0);
}

.timeline-point {
    width: 60px;
    height: 60px;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem;
    position: relative;
    border: 2px solid rgba(255, 215, 0, 0.3);
    transition: all 0.3s ease;
}

.timeline-point::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 50%;
    background: linear-gradient(45deg, #ffd700, #ff69b4);
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.timeline-feature:hover .timeline-point::before {
    opacity: 1;
}

.point-icon {
    font-size: 1.5rem;
    color: #ffd700;
    transition: all 0.3s ease;
}

.timeline-feature:hover .point-icon {
    transform: scale(1.1) rotate(5deg);
}

.timeline-content {
    text-align: center;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
}

.timeline-feature:hover .timeline-content {
    transform: translateY(-5px);
    border-color: rgba(255, 215, 0, 0.3);
    box-shadow: 0 10px 20px rgba(255, 215, 0, 0.1);
}

.feature-title {
    font-size: 1.1rem;
    font-weight: 700;
    color: white;
    margin-bottom: 0.5rem;
    background: linear-gradient(135deg, #fff, #e0e0e0);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.feature-description {
    color: #e0e0e0;
    font-size: 0.9rem;
    line-height: 1.4;
}

@keyframes lineGlow {
    0% {
        opacity: 0.3;
    }
    50% {
        opacity: 0.6;
    }
    100% {
        opacity: 0.3;
    }
}

@media screen and (max-width: 1024px) {
    .timeline-track {
        flex-wrap: nowrap;
        overflow-x: auto;
        padding: 0 1rem;
        -webkit-overflow-scrolling: touch;
        scroll-snap-type: x mandatory;
        gap: 1rem;
    }

    .timeline-feature {
        min-width: 200px;
        scroll-snap-align: center;
    }
}

@media screen and (max-width: 768px) {
    .timeline-feature {
        min-width: 180px;
    }

    .timeline-point {
        width: 50px;
        height: 50px;
    }

    .point-icon {
        font-size: 1.2rem;
    }
}

@media screen and (max-width: 480px) {
    .timeline-feature {
        min-width: 160px;
    }

    .timeline-point {
        width: 40px;
        height: 40px;
    }

    .point-icon {
        font-size: 1rem;
    }
}

.nitro-content {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4rem;
}

.title-section {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    z-index: 3;
}

.rotated-title {
    transform: rotate(90deg) translateX(50%);
    transform-origin: right center;
    text-align: left;
    width: max-content;
}

.crown-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 3;
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 50%;
    backdrop-filter: blur(10px);
    cursor: pointer;
    transition: all 0.3s ease;
}

.crown-center:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translate(-50%, -50%) scale(1.15);
    box-shadow: 0 0 30px rgba(255, 215, 0, 0.4);
}

.crown-center:hover ~ .rotating-hexagons {
    animation-play-state: paused;
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature {
    animation-play-state: paused;
}

.rotating-hexagons .hexagon-feature {
    transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.crown-icon {
    font-size: 2.5rem;
    background: linear-gradient(135deg, #ffd700, #ffed4a);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    filter: drop-shadow(0 4px 8px rgba(255, 215, 0, 0.3));
    transition: all 0.3s ease;
}

.crown-center:hover .crown-icon {
    transform: scale(1.2);
    filter: drop-shadow(0 6px 12px rgba(255, 215, 0, 0.5));
}

.rotating-hexagons {
    position: relative;
    width: 100%;
    height: 100%;
    animation: rotateCircle 30s linear infinite;
}

.hexagon-container {
    position: relative;
    width: 600px;
    height: 600px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.hexagon-grid {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.hexagon-feature {
    position: absolute;
    width: 120px;
    height: 140px;
    top: 50%;
    left: 50%;
    opacity: 0;
    transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-160px) rotate(calc(var(--rotation)));
    transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
    will-change: transform;
}

.hexagon-feature.visible {
    opacity: 1;
}

.hexagon-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    transition: all 0.3s ease;
    z-index: 2;
    transform: rotate(var(--rotation));
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature {
    transition-duration: 0.8s;
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature[style*="--rotation: 0deg"] {
    transform: translate(-50%, -50%) rotate(calc(-1 * 0deg)) translateY(-240px) rotate(calc(0deg)) scale(1.3);
    transition-delay: 0s;
    z-index: 10;
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature[style*="--rotation: 60deg"] {
    transform: translate(-50%, -50%) rotate(calc(-1 * 60deg)) translateY(-240px) rotate(calc(60deg)) scale(1.3);
    transition-delay: 0.1s;
    z-index: 9;
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature[style*="--rotation: 120deg"] {
    transform: translate(-50%, -50%) rotate(calc(-1 * 120deg)) translateY(-240px) rotate(calc(120deg)) scale(1.3);
    transition-delay: 0.2s;
    z-index: 8;
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature[style*="--rotation: 180deg"] {
    transform: translate(-50%, -50%) rotate(calc(-1 * 180deg)) translateY(-240px) rotate(calc(180deg)) scale(1.3);
    transition-delay: 0.3s;
    z-index: 7;
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature[style*="--rotation: 240deg"] {
    transform: translate(-50%, -50%) rotate(calc(-1 * 240deg)) translateY(-240px) rotate(calc(240deg)) scale(1.3);
    transition-delay: 0.4s;
    z-index: 6;
}

.crown-center:hover ~ .rotating-hexagons .hexagon-feature[style*="--rotation: 300deg"] {
    transform: translate(-50%, -50%) rotate(calc(-1 * 300deg)) translateY(-240px) rotate(calc(300deg)) scale(1.3);
    transition-delay: 0.5s;
    z-index: 5;
}

.hexagon-feature:hover .hexagon-content {
    transform: rotate(calc(180deg + var(--rotation)));
    transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1);
}

.hexagon-feature:hover .hexagon-border {
    transform: rotate(calc(180deg + var(--rotation)));
    opacity: 0.8;
    animation-play-state: paused;
    transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
}

.hexagon-feature:hover {
    transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-200px) rotate(calc(var(--rotation))) scale(1.1);
    z-index: 15;
}

.hexagon-border {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #ffd700, #ff69b4, #9370db, #00ffff);
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    opacity: 0.3;
    z-index: 1;
    animation: borderGlow 2s linear infinite;
    transform: rotate(var(--rotation));
}

.target-dots {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
}

.target-dot {
    position: absolute;
    width: 12px;
    height: 12px;
    background: linear-gradient(135deg, #ffd700, #ff69b4);
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(calc(-1 * var(--dot-rotation))) translateY(320px) rotate(calc(var(--dot-rotation)));
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
    box-shadow: 
        0 0 8px rgba(255, 215, 0, 0.6),
        0 0 16px rgba(255, 105, 180, 0.4),
        inset 0 1px 0 rgba(255, 255, 255, 0.3);
    animation: dotPulse 2s ease-in-out infinite alternate;
}



.feature-icon {
    font-size: 1.75rem;
    color: #ffd700;
    margin-bottom: 0.5rem;
    transition: all 0.3s ease;
}

.feature-title {
    font-size: 0.9rem;
    font-weight: 700;
    color: white;
    text-align: center;
}

.feature-description {
    color: #e0e0e0;
    font-size: 0.8rem;
    text-align: center;
    line-height: 1.4;
}

@keyframes rotateCircle {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes borderGlow {
    0%, 100% {
        opacity: 0.3;
    }
    50% {
        opacity: 0.5;
    }
}

@keyframes dotPulse {
    0% {
        box-shadow: 
            0 0 8px rgba(255, 215, 0, 0.6),
            0 0 16px rgba(255, 105, 180, 0.4),
            inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }
    100% {
        box-shadow: 
            0 0 12px rgba(255, 215, 0, 0.8),
            0 0 24px rgba(255, 105, 180, 0.6),
            inset 0 1px 0 rgba(255, 255, 255, 0.5);
    }
}



@media screen and (max-width: 1024px) {
    .nitro-content {
        flex-direction: column;
        gap: 2rem;
    }

    .title-section {
        position: relative;
        right: auto;
        top: auto;
        transform: none;
        margin-bottom: 2rem;
    }

    .rotated-title {
        transform: none;
        text-align: center;
        width: 100%;
    }

    .hexagon-container {
        width: 500px;
        height: 500px;
    }

    .hexagon-feature {
        width: 110px;
        height: 130px;
        transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-140px) rotate(calc(var(--rotation)));
    }

    .crown-center:hover ~ .rotating-hexagons .hexagon-feature {
        transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-220px) rotate(calc(var(--rotation))) scale(1.2) !important;
    }
}

@media screen and (max-width: 768px) {
    .hexagon-container {
        width: 400px;
        height: 400px;
    }

    .hexagon-feature {
        width: 90px;
        height: 110px;
        transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-110px) rotate(calc(var(--rotation)));
    }

    .feature-icon {
        font-size: 1.5rem;
        margin-bottom: 0.4rem;
    }

    .feature-title {
        font-size: 0.8rem;
    }

    .feature-description {
        font-size: 0.7rem;
    }

    .crown-center:hover ~ .rotating-hexagons .hexagon-feature {
        transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-180px) rotate(calc(var(--rotation))) scale(1.15) !important;
    }
}

@media screen and (max-width: 480px) {
    .hexagon-container {
        width: 300px;
        height: 300px;
    }

    .hexagon-feature {
        width: 80px;
        height: 100px;
        transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-90px) rotate(calc(var(--rotation)));
    }

    .feature-icon {
        font-size: 1.25rem;
        margin-bottom: 0.3rem;
    }

    .feature-title {
        font-size: 0.7rem;
    }

    .feature-description {
        font-size: 0.6rem;
    }

    .crown-center:hover ~ .rotating-hexagons .hexagon-feature {
        transform: translate(-50%, -50%) rotate(calc(-1 * var(--rotation))) translateY(-150px) rotate(calc(var(--rotation))) scale(1.1) !important;
    }
}
